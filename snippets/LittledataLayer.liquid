
			<script name="littledata-tracking-tag">
			(function(){
				//LittledataLayer to provide product details for Fix Google Analytics app
				//Version v1.1.1

				var LittledataLayer = {};
			  	LittledataLayer.ecommerce = {
				     	'currencyCode' : '{{shop.currency}}',
			            'impressions' : []
				    };
				
			        {%if product%}
			             var product = {{ product | json }} || {};
			             LittledataLayer.ecommerce.detail = {products: []}
			             LittledataLayer.ecommerce.detail.products.push({
			                 id: product.id,
			                 name: product.title,
			                 price: (product.price/100).toFixed(0),
			                 brand: product.vendor,
			                 category: product.type,
			                 variants : product.variants.map(function(variant) { return { id: variant.id , sku : variant.sku } }),
			                 quantity : 1
			              });
			        {% elsif search %}
			           	var searchResults = {{search.results | json}} || {};
			        {% else %}
			            var collectionNames = [];
			      		{% if collection.handle == "all" %}
			            	var collections = {{collections | json}};
			            {% else %}
			                  var collections = [{{collection | json}}];
			            {% endif %}
			            
			      		collections.forEach(function(c){
			      		  if(c)
			              	collectionNames.push(c.handle);
			            });
			            
			      		var collectionProducts = {{ collection.products | json }} || [];
			      		collectionNames.forEach(function(c){
			              	var pos = 1;
			              	collectionProducts.forEach(function(p){
			                	LittledataLayer.ecommerce.impressions.push({
			               			id: p.id,
			                		name: p.title,
			                  		price: (p.price/100).toFixed(0),
			                  		brand: p.vendor,
			                  		category: p.type,
			                  		position : pos++,
			                  		variants : p.variants.map(function(variant) { return { id: variant.id , sku : variant.sku } }),
			                  		list : location.pathname,
			                  		handle : p.handle
			                	})
			            	})
						});
			        {% endif%}

					LittledataLayer.ecommerce.impressions = getUniqueProducts(LittledataLayer.ecommerce.impressions)

					function getUniqueProducts(array){
					   var u = {}, a = [];
					   for(var i = 0, l = array.length; i < l; ++i){
					      if(u.hasOwnProperty(array[i].id)) {
					         continue;
					      }
					      a.push(array[i]);
					      u[array[i].id] = 1;
					   }
					   return a;
					}

				var loadScript = function(url, callback){
			    var script = document.createElement("script")
			    script.type = "text/javascript";
			 
			    if (script.readyState){  //IE
			        script.onreadystatechange = function(){
			            if (script.readyState == "loaded" ||
			                    script.readyState == "complete"){
			                script.onreadystatechange = null;
			                callback();
			            }
			        };
			    } else {  //Others
			        script.onload = function(){
			            callback();
			        };
			    }
			 
			    script.src = url;
			    document.getElementsByTagName("head")[0].appendChild(script);
			}
			var ldTracker = function(jQuery){
				(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
				(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
				m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
				})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

				ga('create', 'UA-99678075-2', 'auto', {name : 'littledata'});
				
				ga('littledata.require','ec');

				jQuery(document).ready(function(){
					var referralExclusion = /(paypal|secure|visa|MasterCard|payment|clicksafe|arcot\.com|geschuetzteinkaufen|checkout\.shopify\.com|checkout\.rechargeapps\.com|checkout\.shopify\.com|paypal\.com)/
					if ( referralExclusion.test(document.referrer) ) ga('littledata.set','referrer',null)

					if(LittledataLayer && LittledataLayer.ecommerce){
						var locationArr = location.pathname.split('/');
						//run list and product scripts everywhere
						listViewScript();
						productPageScript();
						
						if(locationArr[1] == 'cart')
							cartPageScript();
					}

					ga('littledata.send', 'pageview')
				})

				function listViewScript(){
					if (!LittledataLayer.ecommerce.impressions || !LittledataLayer.ecommerce.impressions.length) return;
					window.setTimeout(function(){
						LittledataLayer.ecommerce.impressions.forEach(function(product,index){
							if(index <= 30)
								ga('littledata.ec:addImpression', product)
						})
						ga('littledata.send', 'event', 'Ecommerce', 'Impressions', location.pathname, 0,{
							hitCallback: function() {
						    }
						});
					},500) // wait for pageview to fire first
					
					//product list clicks
					jQuery('a')
						.filter(function(){ return this.href.indexOf('/products') !== -1}) //only add event to products
						.click(function(ev){
							ev.preventDefault();
							var self = this;
							var clickedProductDetails = LittledataLayer.ecommerce.impressions.filter(function(product){
								var linkSplit = self.href.split('/products/')
								var productLink = linkSplit && linkSplit[1]
								return productLink == product.handle
							})[0];
							if (clickedProductDetails) {
								//only wait 1 second before redirecting
								self.timeout = window.setTimeout(function(){
									document.location = self.href;
								},1000)
								if(typeof localStorage != 'undefined')
									localStorage.list = location.pathname;
								ga('littledata.ec:addProduct', clickedProductDetails);
								ga('littledata.ec:setAction', 'click', {list: location.pathname});
								// Send click with an event, then send user to product page.
								ga('littledata.send', 'event', 'Ecommerce', 'Product list click', String(clickedProductDetails.id), clickedProductDetails.price , {
									hitCallback: function() {
									  window.clearTimeout(self.timeout)
								      document.location = self.href;
								    }
								});
							}
							else document.location = self.href;
						})
				}

				function productPageScript(){
					var product = LittledataLayer.ecommerce.detail
						&& LittledataLayer.ecommerce.detail.products
						&& LittledataLayer.ecommerce.detail.products[0]

					if (product) {
						ga('littledata.ec:addProduct', product)
						if(typeof localStorage !== 'undefined')
							ga('littledata.ec:setAction', 'detail', {list : localStorage && localStorage.list});
						else
							ga('littledata.ec:setAction', 'detail');
						ga('littledata.send', 'event', 'Ecommerce', 'Detail View', String(product.id), product.price);
					}
					
					jQuery('form[action="/cart/add"] [type="submit"], a[data-deliver="subscribe"]').click(function(ev){
						if (product) ga('littledata.ec:addProduct', product)
						else product = {id: 0, price: 0}
						ga('littledata.ec:setAction', 'add');
						ga('littledata.send', 'event', 'Ecommerce', 'Add to cart', product.id, product.price);

						window.setTimeout(function(){
							cartPageScript();
						},500)//wait for real cartToken to generate
					})
				}

				function cartPageScript(){
					ga(function() {
					   var clientID = ga.getByName('littledata').get('clientId');
						jQuery.get('/cart.json',function(cart){
							jQuery.post('https://transactions.littledata.io/clientID', {
								clientID : clientID,
								cartID : cart.token 
							})
						})
					});
				}
			}

			if(typeof jQuery === 'undefined'){
				loadScript('//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js', function(){
				    jQuery191 = jQuery.noConflict(true);
				    ldTracker(jQuery191);
				  });
				} else {
				  ldTracker(jQuery);
				}
			})()
			</script>
			