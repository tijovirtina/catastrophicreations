{% if section.settings.layout == 'grid' %}
  {%- assign limit = section.settings.grid | times: section.settings.rows -%}
{% else %}
  {%- assign limit = 16 -%}
{% endif %}

<!-- Facebook Pixel Code -->
<script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '671851229869664');
  fbq('track', 'PageView');
</script>
<noscript><img height="1" width="1" style="display:none"
  src="https://www.facebook.com/tr?id=671851229869664&ev=PageView&noscript=1"
/></noscript>
<!-- End Facebook Pixel Code -->

{% paginate collection.products by limit %}

<div data-section-id="{{ section.id }}" data-section-type="collection-template">
  <header class="collection-header">

    {% if section.settings.show_collection_image and collection.image %}
      <div class="collection-hero">
        <div class="collection-hero__image" style="background-image: url({{ collection.image | img_url: '1024x300', crop: 'top' }});"></div>
        <div class="collection-hero__title-wrapper">
          <h1 class="collection-hero__title page-width">{{ collection.title }}</h1>
        </div>
      </div>

      {% if collection.description != blank %}
        <div class="collection-description page-width">
          {{ collection.description }}
        </div>
      {% endif %}
    {% else %}
      <div class="page-width">
        <div class="section-header text-center">
          <h1>{{ collection.title }}</h1>
          {% if collection.description != blank %}
            <div class="rte">
              {{ collection.description }}
            </div>
          {% endif %}
        </div>
      </div>
    {% endif %}

  </header>

  <div class="page-width" id="Collection">
    {% if section.settings.layout == 'grid' %}
      {% case section.settings.grid %}
      {% when '2' %}
        {%- assign grid_item_width = 'medium-up--one-half' -%}
        {%- assign image_size = '540x600' -%}
      {% when '3' %}
        {%- assign grid_item_width = 'small--one-half medium-up--one-third' -%}
        {%- assign image_size = '345x550' -%}
      {% when '4' %}
        {%- assign grid_item_width = 'small--one-half medium-up--one-quarter' -%}
        {%- assign image_size = '250x' -%}
      {% when '5' %}
        {%- assign grid_item_width = 'small--one-half medium-up--one-fifth' -%}
        {%- assign image_size = '195x' -%}
      {% endcase %}
      <div class="grid grid--uniform{% if collection.products_count > 0 %} grid--view-items{% endif %}">
        {% for product in collection.products %}
          <div class="grid__item {{ grid_item_width }}">
            {% include 'product-card-grid', grid_image_width: image_size %}
          </div>
        {% else %}
          {% comment %}
          Add default products to help with onboarding for collections/all only.

          The onboarding styles and products are only loaded if the
          store has no products.
          {% endcomment %}
          {% if collection.handle == 'all' and collection.all_vendors.size == 0 and collection.all_types.size == 0 %}
            <div class="grid__item">
              <div class="grid grid--uniform">
                {% for i in (1..limit) %}
                  <div class="grid__item {{ grid_item_width }}">
                    <div class="grid-view-item">
                      <a href="#" class="grid-view-item__link">
                        <div class="grid-view-item__image">
                          {% capture current %}{% cycle 1, 2, 3, 4, 5, 6 %}{% endcapture %}
                          {{ 'product-' | append: current | placeholder_svg_tag: 'placeholder-svg' }}
                        </div>
                        <div class="h4 grid-view-item__title">{{ 'homepage.onboarding.product_title' | t }}</div>
                        <div class="grid-view-item__meta">
                          <span class="product-price__price">$19.99</span>
                        </div>
                      </a>
                    </div>
                  </div>
                {% endfor %}
              </div>
            </div>
          {% else %}
            {%- assign is_empty_collection = true -%}
          {% endif %}
        {% endfor %}
      </div>
    {% else %}
      <div class="list-view-items">
        {% for product in collection.products %}
          <a href="{{ product.url | within: collection }}" class="list-view-item">
            {% include 'product-card-list', product: product %}
          </a>
        {% else %}

          {% comment %}
          Add default products to help with onboarding for collections/all only.

          The onboarding styles and products are only loaded if the
          store has no products.
          {% endcomment %}
          {% if collection.handle == 'all' and collection.all_vendors.size == 0 and collection.all_types.size == 0%}
            {% for i in (1..4) %}
              <a href="#" class="list-view-item">
                <div class="list-view-item__image-column">
                  <div class="list-view-item__image-wrapper">
                    <div class="list-view-item__image">
                      {%- assign placeholder = 'placeholder-product-' | append: i -%}
                      {% include placeholder %}
                    </div>
                  </div>
                </div>

                <div class="list-view-item__title-column">
                  <div class="list-view-item__title">{{ 'homepage.onboarding.product_title' | t }}</div>
                </div>

                <div class="list-view-item__price-column">
                  <span class="product-price__price">$19.99</span>
                </div>
              </a>
            {% endfor %}
          {% else %}
            {%- assign is_empty_collection = true -%}
          {% endif %}
        {% endfor %}
      </div>
    {% endif %}

    {% if is_empty_collection %}
      <div class="grid__item small--text-center">
        <p class="text-center">{{ 'collections.general.no_matches' | t }}</p>
      </div>
    {% endif %}

    {% if paginate.pages > 1 %}
      {% include 'pagination' %}
    {% endif %}
  </div>
</div>

{% endpaginate %}

{% schema %}
  {
    "name": "Collection pages",
    "settings": [
      {
        "type": "select",
        "id": "layout",
        "label": "Layout",
        "default": "grid",
        "options": [
          {
            "value": "grid",
            "label": "Grid"
          },
          {
            "value": "list",
            "label": "List"
          }
        ]
      },
      {
        "type": "select",
        "id": "grid",
        "label": "Products per row (grid only)",
        "default": "4",
        "options": [
          {
            "value": "2",
            "label": "2"
          },
          {
            "value": "3",
            "label": "3"
          },
          {
            "value": "4",
            "label": "4"
          },
          {
            "value": "5",
            "label": "5"
          }
        ]
      },
      {
        "type": "select",
        "id": "rows",
        "label": "Rows per page (grid only)",
        "default": "2",
        "options": [
          {
            "value": "2",
            "label": "2"
          },
          {
            "value": "3",
            "label": "3"
          },
          {
            "value": "4",
            "label": "4"
          },
          {
            "value": "5",
            "label": "5"
          },
          {
            "value": "6",
            "label": "6"
          },
          {
            "value": "7",
            "label": "7"
          },
          {
            "value": "8",
            "label": "8"
          }
        ]
      },
      {
        "type": "checkbox",
        "id": "show_collection_image",
        "label": "Show collection image",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "show_vendor",
        "label": "Show product vendors",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "sort_enable",
        "label": "Enable sorting",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "tags_enable",
        "label": "Enable tag filtering",
        "default": true
      }
    ]
  }
{% endschema %}

